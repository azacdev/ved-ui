{
  "name": "date-range-picker-form",
  "type": "registry:ui",
  "registryDependencies": [
    "calendar",
    "button",
    "form",
    "sonner",
    "popover"
  ],
  "files": [
    {
      "type": "registry:ui",
      "content": "\"use client\";\n\nimport { z } from \"zod\";\nimport { format, addDays } from \"date-fns\";\nimport { useForm } from \"react-hook-form\";\nimport { CalendarIcon } from \"lucide-react\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\n\nimport { toast } from \"sonner\";\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/components/ui/button\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\n\nconst FormSchema = z.object({\n  dateRange: z\n    .object({\n      from: z.date({\n        required_error: \"Start date is required\",\n      }),\n      to: z.date({\n        required_error: \"End date is required\",\n      }),\n    })\n    .refine((data) => data.from <= data.to, {\n      message: \"End date cannot be before start date\",\n      path: [\"to\"],\n    }),\n});\n\nexport default function DateRangePickerForm() {\n  const form = useForm<z.infer<typeof FormSchema>>({\n    resolver: zodResolver(FormSchema),\n    defaultValues: {\n      dateRange: {\n        from: new Date(),\n        to: addDays(new Date(), 7),\n      },\n    },\n  });\n\n  function onSubmit(data: z.infer<typeof FormSchema>) {\n    toast.success(\n      `Date range submitted: ${format(data.dateRange.from, \"PPP\")} to ${format(\n        data.dateRange.to,\n        \"PPP\"\n      )}`\n    );\n    form.reset();\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\n        <FormField\n          control={form.control}\n          name=\"dateRange\"\n          render={({ field }) => (\n            <FormItem className=\"flex flex-col\">\n              <FormLabel>Date Range</FormLabel>\n              <Popover>\n                <PopoverTrigger asChild>\n                  <FormControl>\n                    <Button\n                      variant={\"outline\"}\n                      className={cn(\n                        \"w-[300px] justify-start text-left font-normal\",\n                        !field.value && \"text-muted-foreground\"\n                      )}\n                    >\n                      <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                      {field.value?.from ? (\n                        field.value.to ? (\n                          <>\n                            {format(field.value.from, \"LLL dd, y\")} -{\" \"}\n                            {format(field.value.to, \"LLL dd, y\")}\n                          </>\n                        ) : (\n                          format(field.value.from, \"LLL dd, y\")\n                        )\n                      ) : (\n                        <span>Select date range</span>\n                      )}\n                    </Button>\n                  </FormControl>\n                </PopoverTrigger>\n                <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                  <Calendar\n                    initialFocus\n                    mode=\"range\"\n                    defaultMonth={field.value?.from}\n                    selected={field.value}\n                    onSelect={field.onChange}\n                    numberOfMonths={2}\n                  />\n                </PopoverContent>\n              </Popover>\n              <FormDescription>\n                Select the start and end dates for your reservation\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </Form>\n  );\n}\n",
      "path": "ui/date-range-picker-form.tsx",
      "target": "components/ui/date-range-picker-form.tsx"
    }
  ]
}